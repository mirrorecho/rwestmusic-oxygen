{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"with",
				"with_short_score\t(full_score.py)"
			],
			[
				"block",
				"block_to_short_score\t(mark_0.py)"
			],
			[
				"branch",
				"branch_type\t(factory.py)"
			],
			[
				"pok",
				"poke_to_staff\t(mark_0.py)"
			],
			[
				"def",
				"defined_length\tabc"
			],
			[
				"calliop",
				"calliope.Segment\tabc"
			],
			[
				"rehear",
				"rehearsal_mark_number\tabc"
			],
			[
				"reh",
				"rehearsal_mark_number\tabc"
			],
			[
				"defined",
				"defined_length\tabc"
			],
			[
				"mark",
				"mark_a\tabc"
			],
			[
				"int",
				"interval=-12\tabc"
			],
			[
				"line",
				"line_block\tabc"
			],
			[
				"sel",
				"selectable\t(mark_0.py)"
			],
			[
				"Tr",
				"Transform\t(mark_0.py)"
			],
			[
				"calliope",
				"calliope.transforms.poke\tabc"
			],
			[
				"as_midi",
				"as_midi=True\tabc"
			],
			[
				"il",
				"illustrate_me\tabc"
			],
			[
				"Cop",
				"CoplandBlock\t(copland.py)"
			],
			[
				"UpperCell",
				"UpperCellHigh\tabc"
			],
			[
				"UpperC",
				"UpperCellLong\tabc"
			],
			[
				"init",
				"init_pitches\t(sing_line.py)"
			],
			[
				"Cell",
				"CellBlock〔class〕"
			],
			[
				"sweet",
				"sweet_pitches\tabc"
			],
			[
				"Sing",
				"SingLine〔class〕"
			],
			[
				"SweetDuos",
				"SweetDuoCellsPhrase"
			],
			[
				"next",
				"next_pitch\tabc"
			],
			[
				"my",
				"my_pitches\t(factory.py)"
			],
			[
				"Tran",
				"Transform〔class〕"
			],
			[
				"h",
				"harmonize_dict\tabc"
			],
			[
				"down",
				"down_minor\tabc"
			],
			[
				"su",
				"super〔class〕"
			],
			[
				"Jig",
				"JigBlock\tabc"
			],
			[
				"note",
				"note_events\tabc"
			],
			[
				"Staff",
				"StaffGroup\tabc"
			],
			[
				"cal",
				"calliope.Line\t(mark_0.py)"
			],
			[
				"Phras",
				"PhrasePhrases〔class〕"
			],
			[
				"Line",
				"LineBlock\t(mark_d.py)"
			],
			[
				"Phrase",
				"PhraseBlock\t(mark_d.py)"
			],
			[
				"c",
				"class"
			],
			[
				"Phra",
				"PhrasePhrases〔class〕"
			],
			[
				"sl",
				"selectable〔variable〕"
			],
			[
				"se",
				"selectable〔variable〕"
			],
			[
				"mid",
				"midlow_string_ranges\t(pitch_range_helpers.py)"
			],
			[
				"J",
				"JigPitches〔class〕"
			],
			[
				"sing",
				"sing_line\t(jig.py)"
			],
			[
				"tra",
				"transformed〔function〕"
			],
			[
				"Fr",
				"FromSelectableFractory"
			],
			[
				"en",
				"enumerate\t(pitch_grid.py)"
			],
			[
				"pithc",
				"pitch_range\tabc"
			],
			[
				"cu",
				"current_pitch\tabc"
			],
			[
				"show",
				"show_final_block\tabc"
			],
			[
				"Se",
				"SegmentBlock\tabc"
			],
			[
				"child",
				"child_rows\tabc"
			],
			[
				"child_",
				"child_rows"
			],
			[
				"Slu",
				"SlurCells\t(span_by_type.py)"
			],
			[
				"FINAL_BLOCK_C",
				"FINAL_BLOCK_C.illustrate_me"
			],
			[
				"file",
				"filename\tabc"
			],
			[
				"from",
				"from_block_list〔function〕"
			],
			[
				"MoveS",
				"MoveStack\t(move_stack.py)"
			],
			[
				"s",
				"SingSeq〔class〕"
			],
			[
				"clang",
				"clang_phrase_type\t(clang.py)"
			],
			[
				"Clang",
				"ClangPhrase〔class〕"
			],
			[
				"ils",
				"illustrate_me\t(mark_0.py)"
			],
			[
				"trans",
				"transformed\tabc"
			],
			[
				"chord",
				"chord_length\tabc"
			],
			[
				"mid_",
				"midhigh_string_ranges\t(pitch_range_helpers.py)"
			],
			[
				"pitch",
				"pitch_range_helpers\tabc"
			],
			[
				"pitch_",
				"pitch_ranges"
			],
			[
				"pitch_gr",
				"pitch_grid_type\tabc"
			],
			[
				"call",
				"calliope\tabc"
			],
			[
				"pitch_c",
				"pitch_class"
			],
			[
				"bass",
				"bass_line\tabc"
			],
			[
				"sorted",
				"sorted_pitches\tabc"
			],
			[
				"Exc",
				"ExcludeSelection\t(selection.py)"
			],
			[
				"staff",
				"staff_groups\t(mark_0.py)"
			],
			[
				"cell",
				"cell_indices\tabc"
			],
			[
				"Bas",
				"CalliopeBase〔class〕"
			],
			[
				"move",
				"move_stack\tabc"
			],
			[
				"as",
				"as_row"
			],
			[
				"sing_crun",
				"sing_crunch_list\tabc"
			],
			[
				"as_",
				"as_midi=True\t(sandbox.py)"
			],
			[
				"flute",
				"flute_line\tabc"
			],
			[
				"is",
				"is_rest\t(fragment.py)"
			],
			[
				"r",
				"rhythm=(4,4\t(sandbox.py)"
			],
			[
				"SingP",
				"SingPhraseA1\tabc"
			],
			[
				"respell",
				"respell=\"sharps\t(sandbox.py)"
			],
			[
				"rem",
				"remaining_beats\tabc"
			],
			[
				"beats",
				"beats_before"
			],
			[
				"get",
				"get_clang"
			],
			[
				"get_cl",
				"get_clang_pitches\tabc"
			],
			[
				"ticks",
				"ticks_before\tabc"
			],
			[
				"select",
				"selectable\tabc"
			],
			[
				"init_",
				"init_pitches\t(sandbox.py)"
			],
			[
				"tall",
				"tally_me\t(grid_base.py)"
			],
			[
				"ta",
				"tally\t(grid_base.py)"
			],
			[
				"gid",
				"grid_pitch_calc\tabc"
			],
			[
				"update",
				"update_pitches_from_grid\tabc"
			],
			[
				"Sig",
				"SingPhraseA2〔class〕"
			],
			[
				"Sin",
				"SingPhraseA1〔class〕"
			],
			[
				"new",
				"new_pitches\tabc"
			],
			[
				"smar",
				"smart_range\tabc"
			],
			[
				"sma",
				"smart_range\tabc"
			],
			[
				"voice",
				"voice_count\tabc"
			],
			[
				"add",
				"add_pitches\tabc"
			],
			[
				"tally",
				"tally_apps\tabc"
			],
			[
				"sing_",
				"sing_up_4ths\tabc"
			],
			[
				"Chor",
				"ChordSelect\tabc"
			],
			[
				"phrase",
				"phrase4〔variable〕"
			],
			[
				"note_",
				"note_events\t(stack_pitches.py)"
			],
			[
				"St",
				"StackPitches\t(stack_pitches.py)"
			],
			[
				"Ma",
				"MakeChords\t(make_chords.py)"
			],
			[
				"time",
				"time_signature\tabc"
			],
			[
				"geta",
				"getattr_first_ancestors\t(tree_node.py)"
			],
			[
				"getattr",
				"getattr_ancestors\tabc"
			],
			[
				"tine",
				"time_signature\tabc"
			],
			[
				"app",
				"apply_from\tabc"
			],
			[
				"metri",
				"metrical_durations"
			],
			[
				"illu",
				"illustrate_me〔function〕"
			],
			[
				"dub",
				"dub_attr"
			],
			[
				"Call",
				"CalliopeBase\t(calliope_base.py)"
			],
			[
				"__",
				"__init__"
			],
			[
				"pi",
				"pitches〔function〕"
			],
			[
				"line_straig",
				"line_straight_2"
			],
			[
				"pit",
				"pitch_list"
			],
			[
				"Chords",
				"ChordsFromSelectable\t(chords_from_selectable.py)"
			],
			[
				"last_",
				"last_non_rest"
			],
			[
				"first",
				"first_non_rest"
			],
			[
				"dep",
				"depth_first\t(selection.py)"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/Virtualenv/Python + Virtualenv.sublime-build",
					""
				]
			],
			[
				"Packages/Virtualenv/Python + Virtualenv.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"vir",
				"Virtualenv: Activate"
			],
			[
				"pa",
				"Package Control: List Packages"
			],
			[
				"virtru",
				"Virtualenv: Add directory"
			],
			[
				"virt",
				"Virtualenv: Activate"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"p",
				"Package Control: Install Package"
			],
			[
				"packa",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 136.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
	],
	"file_history":
	[
		"/Users/rwest/Code/mirrorecho/rwestmusic-oxygen/engrave-score.oxygen.ly",
		"/Users/rwest/Code/mirrorecho/rwestmusic-oxygen/staves.oxygen.ly",
		"/Users/rwest/Code/mirrorecho/rwestmusic-oxygen/engrave-parts.oxygen.ly",
		"/Users/rwest/Code/mirrorecho/rwestmusic-oxygen/music.oxygen.ly",
		"/Users/rwest/Code/mirrorecho/rwestmusic-oxygen/engrave-score.oxygen.midi",
		"/Users/rwest/Code/mirrorecho/rwestmusic-folktale/folktale/stories/arranger.py",
		"/Users/rwest/Code/mirrorecho/rwestmusic-folktale/folktale/marks/mark_r.py",
		"/Users/rwest/Code/mirrorecho/rwestmusic-folktale/folktale/marks/mark_o.py",
		"/Users/rwest/Code/mirrorecho/rwestmusic-folktale/folktale/marks/mark_l.py",
		"/Users/rwest/Code/mirrorecho/rwestmusic-folktale/folktale/marks/mark_k.py",
		"/Users/rwest/Code/mirrorecho/rwestmusic-folktale/folktale/marks/mark_j.py",
		"/Users/rwest/Code/mirrorecho/rwestmusic-folktale/folktale/marks/mark_h.py",
		"/Users/rwest/Code/mirrorecho/rwestmusic-folktale/folktale/marks/mark_g.py",
		"/Users/rwest/Code/mirrorecho/rwestmusic-folktale/folktale/marks/mark_e.py",
		"/Users/rwest/Code/mirrorecho/rwestmusic-folktale/folktale/marks/mark_d.py",
		"/Users/rwest/Code/mirrorecho/rwestmusic-folktale/folktale/marks/mark_c.py",
		"/Users/rwest/Code/mirrorecho/rwestmusic-folktale/folktale/marks/mark_b.py",
		"/Users/rwest/Code/mirrorecho/rwestmusic-folktale/folktale/marks/mark_0.py",
		"/Users/rwest/Code/mirrorecho/rwestmusic-folktale/folktale/scores/full_score.py",
		"/Users/rwest/Code/mirrorecho/rwestmusic-folktale/folktale/marks/mark_f.py",
		"/Users/rwest/Code/mirrorecho/calliope/calliope/factories/factory.py",
		"/Users/rwest/Code/mirrorecho/calliope/calliope/_sandbox/sandbox.py",
		"/Users/rwest/Code/mirrorecho/rwestmusic-folktale/folktale/marks/mark_q.py",
		"/Users/rwest/Code/mirrorecho/rwestmusic-folktale/folktale/marks/mark_a.py",
		"/Users/rwest/Code/mirrorecho/calliope/calliope/core/tag_set.py",
		"/Users/rwest/Code/mirrorecho/calliope/calliope/machines/segment.py",
		"/Users/rwest/Code/mirrorecho/calliope/calliope/bubbles/staff.py",
		"/Users/rwest/Code/mirrorecho/rwestmusic-folktale/folktale/scores/score.py",
		"/Users/rwest/Code/mirrorecho/rwestmusic-folktale/stylesheets/score.ily",
		"/Users/rwest/Code/mirrorecho/rwestmusic-folktale/folktale/scores/illustrations/score.ly",
		"/Users/rwest/Code/mirrorecho/calliope/calliope/bubbles/score.py",
		"/Users/rwest/Code/mirrorecho/calliope/calliope/core/tree.py",
		"/Users/rwest/Code/mirrorecho/rwestmusic-folktale/folktale/marks/mark_m.py",
		"/Users/rwest/Code/mirrorecho/rwestmusic-folktale/folktale/marks/mark_n.py",
		"/Users/rwest/Code/mirrorecho/rwestmusic-folktale/folktale/scores/parts.py",
		"/Users/rwest/Code/mirrorecho/calliope/calliope/transforms/smooth_event_lengths.py",
		"/Users/rwest/Code/mirrorecho/calliope/calliope/transforms/tenu_stacca.py",
		"/Users/rwest/Code/mirrorecho/calliope/calliope/transforms/tag_events.py",
		"/Users/rwest/Code/mirrorecho/calliope/calliope/transforms/event_length.py",
		"/Users/rwest/Code/mirrorecho/rwestmusic-folktale/folktale/stories/copland.py",
		"/Users/rwest/Code/mirrorecho/calliope/calliope/transforms/label.py",
		"/Users/rwest/Code/mirrorecho/rwestmusic-folktale/folktale/stories/harmony.py",
		"/Users/rwest/Code/mirrorecho/rwestmusic-folktale/folktale/stories/jig.py",
		"/Users/rwest/Code/mirrorecho/rwestmusic-folktale/folktale/stories/folk.py",
		"/Users/rwest/Code/mirrorecho/rwestmusic-folktale/folktale/lines/sing_line.py",
		"/Users/rwest/Code/mirrorecho/rwestmusic-folktale/folktale/marks/data/mark_c_move_phrase_a0_block0_start_data.1.json",
		"/Users/rwest/Code/mirrorecho/rwestmusic-folktale/folktale/stories/clang.py",
		"/Users/rwest/Code/mirrorecho/rwestmusic-folktale/folktale/marks/mark_i.py",
		"/Users/rwest/Code/mirrorecho/calliope/calliope/transforms/transpose.py",
		"/Users/rwest/Code/mirrorecho/calliope/calliope/transforms/poke.py",
		"/Users/rwest/Code/mirrorecho/rwestmusic-folktale/folktale/_sandbox/sandbox.py",
		"/Users/rwest/Code/mirrorecho/calliope/calliope/machines/fragment.py",
		"/Users/rwest/Code/mirrorecho/calliope/calliope/machines/fragment_block.py",
		"/Users/rwest/Code/mirrorecho/rwestmusic-folktale/folktale/libraries/pitch_range_helpers.py",
		"/Users/rwest/Code/mirrorecho/rwestmusic-folktale/folktale/marks/data/mark_f_phrase0_block_0_start_data.1.json",
		"/Users/rwest/Code/mirrorecho/calliope/calliope/grids/grid_base.py",
		"/Users/rwest/Code/mirrorecho/calliope/calliope/grids/pitches/pitch_grid.py",
		"/Users/rwest/Code/mirrorecho/calliope/calliope/core/calliope_base.py",
		"/Users/rwest/Code/mirrorecho/rwestmusic-folktale/folktale/stories/move_stack.py",
		"/Users/rwest/Code/mirrorecho/calliope/calliope/factories/pitches_through_grid.py",
		"/Users/rwest/Code/mirrorecho/calliope/calliope/machines/machine.py",
		"/Users/rwest/Code/mirrorecho/rwestmusic-folktale/folktale/libraries/tally_apps.py",
		"/Users/rwest/Code/mirrorecho/calliope/calliope/__init__.py",
		"/Users/rwest/Code/mirrorecho/calliope/calliope/transforms/span_by_type.py",
		"/Users/rwest/Code/mirrorecho/calliope/calliope/factories/chords_from_selectable.py",
		"/Users/rwest/Code/mirrorecho/calliope/calliope/machines/event.py",
		"/Users/rwest/Code/mirrorecho/calliope/calliope/core/selectable_mixin.py",
		"/Users/rwest/Code/mirrorecho/rwestmusic-folktale/folktale/stories/sing_stack.py",
		"/Users/rwest/Code/mirrorecho/calliope/calliope/factories/stack_pitches.py",
		"/Users/rwest/Code/mirrorecho/calliope/calliope/transforms/pulse_events.py",
		"/Users/rwest/Code/mirrorecho/rwestmusic-options-changed/closely/libraries/pitch_range_helpers.py",
		"/Users/rwest/Code/mirrorecho/rwestmusic-options-changed/closely/mark_c/material_c.py",
		"/Users/rwest/Code/mirrorecho/calliope/calliope/core/selection.py",
		"/Users/rwest/Code/mirrorecho/calliope/calliope/transforms/crop_chords.py",
		"/Users/rwest/Code/mirrorecho/calliope/calliope/factories/transform_from.py",
		"/Users/rwest/Code/mirrorecho/calliope/calliope/transforms/transform.py",
		"/Users/rwest/Code/mirrorecho/calliope/calliope/transforms/pitches_through_grid.py",
		"/Users/rwest/Code/mirrorecho/calliope/calliope/machines/fragment_row.py",
		"/Users/rwest/Code/mirrorecho/calliope/setup.py",
		"/Users/rwest/Code/mirrorecho/calliope/calliope/core/settings.py",
		"/Users/rwest/Code/mirrorecho/rwestmusic-options-changed/closely/stylesheets/score.ily",
		"/Users/rwest/Code/mirrorecho/rwestmusic-copper/copper/scores/stylesheets/score.ily",
		"/Users/rwest/Code/mirrorecho/rwestmusic-folktale/folktale/stories/illustrations/clang.midi",
		"/Users/rwest/Code/mirrorecho/calliope/calliope/core/pitch.py",
		"/Users/rwest/Code/mirrorecho/calliope/calliope/machines/logical_tie.py",
		"/Users/rwest/Code/mirrorecho/calliope/calliope/core/tree_node.py",
		"/Users/rwest/Code/mirrorecho/rwestmusic-folktale/.gitignore",
		"/Users/rwest/Code/mirrorecho/rwestmusic-folktale/folktale/lines/stories.py",
		"/Users/rwest/Code/mirrorecho/rwestmusic-folktale/folktale/sandbox/attempt.py",
		"/Users/rwest/Code/mirrorecho/calliope/calliope/transforms/stack_pitches.py",
		"/Users/rwest/Code/mirrorecho/calliope/calliope/transforms/make_chords.py",
		"/Users/rwest/Code/mirrorecho/sandbox/abjad/strings_harp_piano.py",
		"/Users/rwest/Code/mirrorecho/calliope/calliope/_sandbox/base_object.py",
		"/Users/rwest/Code/mirrorecho/calliope/calliope/machines/cell.py",
		"/Users/rwest/Code/mirrorecho/calliope/calliope/libraries/pitch_sequence.py",
		"/Users/rwest/Code/mirrorecho/rwestmusic-options-changed/setup.py",
		"/Users/rwest/Code/mirrorecho/rwestmusic-options-changed/closely/libraries/rhythms.py",
		"/Users/rwest/Code/mirrorecho/calliope/calliope/grids/tally_base.py",
		"/Users/rwest/Code/mirrorecho/calliope/calliope/factories/copy_events.py",
		"/Users/rwest/Code/mirrorecho/calliope/calliope/machines/line.py",
		"/Users/rwest/Code/mirrorecho/calliope/calliope/transforms/sorting.py",
		"/Users/rwest/Code/mirrorecho/calliope/calliope/bubbles/bubble.py",
		"/Users/rwest/Code/mirrorecho/calliope/calliope/_sandbox/_tree_sandbox.py",
		"/Users/rwest/Code/mirrorecho/calliope/calliope/bubble_types.md",
		"/Users/rwest/Code/mirrorecho/calliope/calliope/machines/phrase.py",
		"/Users/rwest/Code/mirrorecho/calliope/calliope/machines/fragment_line.py",
		"/Users/rwest/Code/mirrorecho/calliope/calliope/core/uqbar_tree_fork.py",
		"/Users/rwest/Code/mirrorecho/calliope/calliope/core/startup.py",
		"/Users/rwest/Code/mirrorecho/calliope/calliope/transforms/add_constant_pitch.py",
		"/Users/rwest/Code/mirrorecho/calliope/calliope/transforms/arrange.py",
		"/Users/rwest/Code/mirrorecho/calliope/calliope/transforms/smart_range.py",
		"/Users/rwest/Code/mirrorecho/rwestmusic-options-changed/closely/libraries/phrases.py",
		"/Users/rwest/Code/mirrorecho/rwestmusic-options-changed/closely/libraries/rhythms_examples.py",
		"/Users/rwest/Code/mirrorecho/rwestmusic-options-changed/closely/mark_f/material_f.py",
		"/Users/rwest/Code/mirrorecho/rwestmusic-options-changed/closely/sandbox.py",
		"/Users/rwest/Code/mirrorecho/calliope/calliope/_sandbox/chorales/chorale_1.py",
		"/Users/rwest/Code/mirrorecho/calliope/calliope/bubbles/fragment.py",
		"/Users/rwest/Code/mirrorecho/calliope/calliope/machines/section.py",
		"/Users/rwest/Code/mirrorecho/calliope/calliope/core/base_mixin.py",
		"/Users/rwest/Code/mirrorecho/rwestmusic-options-changed/closely/scores/score.py",
		"/Users/rwest/Code/mirrorecho/calliope/calliope/bubbles/sequence.py",
		"/Users/rwest/Library/Application Support/Sublime Text 3/Packages/User/Material-Theme-Palenight.sublime-theme",
		"/Users/rwest/Code/mirrorecho/rwestmusic-options-changed/.gitignore",
		"/Users/rwest/Code/mirrorecho/rwestmusic-options-changed/readme.md",
		"/Users/rwest/Code/planning/conference/utils.py",
		"/Users/rwest/Code/planning/requirements.txt"
	],
	"find":
	{
		"height": 75.0
	},
	"find_in_files":
	{
		"height": 176.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"horn",
			"Trumpe"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 37.0
	},
	"input":
	{
		"height": 76.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 222.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "rwestmusic-oxygen.sublime-project",
	"replace":
	{
		"height": 70.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Code/planning/planning.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 340.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
